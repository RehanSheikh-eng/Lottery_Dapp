{"version":3,"sources":["artifacts/deployments lazy /^/.*/.json$/ groupOptions: {} namespace object","utils/loadContract.js","utils/interact.js","components/EnterButtonV2.js","components/Balance.js","components/ConnectButton.js","components/LotteryAppBar.js","components/LotteryHub.js","App.js","serviceWorker.js","index.js","tennis-ball.svg"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","module","exports","loadContract","chain","contractName","a","window","ethereum","address","console","log","undefined","contractArtifact","contractAbi","abi","provider","ethers","providers","Web3Provider","iface","utils","Interface","Contract","connectWallet","request","method","addressArray","obj","status","message","target","href","getCurrentWalletConnected","length","useStyles","makeStyles","root","alignItems","border","borderRadius","boxShadow","display","fontSize","fontWeight","justifyContent","letterSpacing","lineHeight","opacity","outline","height","padding","backgroundColor","color","maxWidthidth","disabled","EnterButtonV2","useState","state","setState","classes","setDisabled","lottery","setLottery","setProvider","lotterySize","setLotterySize","setMaxValidNumber","setLotteryId","setLotteryInfo","numberOptions","setNumberOptions","rotation","setRotation","hueRotate","setHueRotate","loading","setLoading","useEffect","sizeOfLottery","toNumber","stateobj","i","nameId","maxValidNumber","lottoId","lotteryId","getLotteryInfo","lotteryInfo","value","label","push","rot","Math","floor","random","round","numrots","addLotteryContractListner","handleChange","name","handleBuyTicket","signer","getSigner","lottery_rw","connect","numbers","values","enter","x","parseEther","Array","from","document","querySelectorAll","forEach","select","on","event","style","textAlign","marginBottom","className","key","src","ball","width","position","zIndex","filter","onChange","transform","item","Button","onClick","marginLeft","CircularProgress","flexGrow","balanceContainer","background","balanceText","Balance","ethbalance","setEthBalance","usdbalance","setUsdBalance","drawTime","setDrawTime","URL","author","fetchCurrentBalance","formatEther","unixTime","unixTimeDateObj","Date","unixTimeString","toUTCString","getBalance","fetchPrice","fetch","response","json","data","current_price","interval","setInterval","clearInterval","float","marginTop","ConnectButton","walletAddress","setWallet","setStatus","addWalletListener","accounts","connectWalletPressed","walletResponse","String","substring","menuButton","marginRight","title","LotteryAppBar","AppBar","Toolbar","Typography","variant","align","LotteryHub","activeButton","setActiveButton","searchLotteryId","setSearchLotteryId","currentLotteryId","setCurrentLotteryId","winningNumbers","setWinningNumbers","setNumberOfTickets","tickets","setTickets","disabledForward","setDisabledForward","disabledBackwards","setDisabledBackwards","claimStatus","setClaimStatus","currentLotteryInfo","getClaimStatus","getNumberOfTickets","numberOfTickets","ticketsObj","getTicketNumber","handleDateChange","handleClaimPrize","tx","claimPrize","handleClick","handleBack","handleForward","handleFastForward","Number","buyer","pattern","flexDirection","ticket","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b59b893a.chunk.js","sourcesContent":["var map = {\n\t\"./42/0x94f430793dBCDC1D565124d53E9a79A69e099F43.json\": [\n\t\t158,\n\t\t3\n\t],\n\t\"./42/0x9A2F94F317De4FF9D4eCb5C1f32Db6ef85d07e81.json\": [\n\t\t159,\n\t\t4\n\t],\n\t\"./42/0xC3Da79F64294c96d6a2f4bD257b468AD02C994e6.json\": [\n\t\t160,\n\t\t5\n\t],\n\t\"./42/0xE40FA909855236fd544dfA6Eebe3c4f12e7242eD.json\": [\n\t\t161,\n\t\t6\n\t],\n\t\"./map.json\": [\n\t\t87\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 133;\nmodule.exports = webpackAsyncContext;","import map from \"../artifacts/deployments/map.json\"\r\nimport { ethers } from 'ethers'\r\n\r\nconst loadContract = async (chain, contractName) => {\r\n    if (typeof window.ethereum !== 'undefined'){\r\n\r\n        let address\r\n        try {\r\n            address = map[chain][contractName][0]\r\n        } catch (e) {\r\n            console.log(`Couldn't find any deployed contract \"${contractName}\" on the chain \"${chain}\".`)\r\n            return undefined\r\n        }\r\n    \r\n        // Load the artifact with the specified address\r\n        let contractArtifact\r\n        try {\r\n            contractArtifact = await import(`../artifacts/deployments/${chain}/${address}.json`)\r\n        } catch (e) {\r\n            console.log(`Failed to load contract artifact \"../artifacts/deployments/${chain}/${address}.json\"`)\r\n            return undefined\r\n        }\r\n        const contractAbi = contractArtifact.abi\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n        const iface = new ethers.utils.Interface(contractAbi);\r\n        return new ethers.Contract(address, iface, provider)\r\n    }\r\n}\r\nexport default loadContract","import React from \"react\";\r\n\r\nexport const connectWallet = async () => {\r\n    if (window.ethereum) {\r\n      try {\r\n        const addressArray = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const obj = {\r\n          status: \"👆🏽 Write a message in the text-field above.\",\r\n          address: addressArray[0],\r\n        };\r\n        return obj;\r\n      } catch (err) {\r\n        return {\r\n          address: \"\",\r\n          status: \"😥 \" + err.message,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        address: \"\",\r\n        status: (\r\n          <span>\r\n            <p>\r\n              {\" \"}\r\n              🦊{\" \"}\r\n              <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n              </a>\r\n            </p>\r\n          </span>\r\n        ),\r\n      };\r\n    }\r\n  };\r\n  \r\nexport const getCurrentWalletConnected = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n        const addressArray = await window.ethereum.request({\r\n            method: \"eth_accounts\",\r\n        });\r\n        if (addressArray.length > 0) {\r\n            return {\r\n            address: addressArray[0],\r\n            status: \"👆🏽 Write a message in the text-field above.\",\r\n            };\r\n        } else {\r\n            return {\r\n            address: \"\",\r\n            status: \"🦊 Connect to Metamask using the top right button.\",\r\n            };\r\n        }\r\n        } catch (err) {\r\n        return {\r\n            address: \"\",\r\n            status: \"😥 \" + err.message,\r\n        };\r\n        }\r\n    } else {\r\n        return {\r\n        address: \"\",\r\n        status: (\r\n            <span>\r\n            <p>\r\n                {\" \"}\r\n                🦊{\" \"}\r\n                <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n                You must install Metamask, a virtual Ethereum wallet, in your\r\n                browser.\r\n                </a>\r\n            </p>\r\n            </span>\r\n        ),\r\n        };\r\n    }\r\n};\r\n  ","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport loadContract from \"../utils/loadContract\";\r\nimport { ethers } from 'ethers'\r\nimport {\r\n    getCurrentWalletConnected,\r\n  } from \"../utils/interact\";\r\nimport \"./EnterButtonV2.css\";\r\nimport ball from \"../tennis-ball.svg\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ReactDOM from \"react\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        alignItems: \"center\",\r\n        border: 0,\r\n        borderRadius: \"16px\",\r\n        boxShadow: \"rgb(14 14 44 / 40%) 0px -1px 0px 0px inset\",\r\n        display: \"inline-flex\",\r\n        fontSize: \"16px\",\r\n        fontWeight: 600,\r\n        justifyContent: \"center\",\r\n        letterSpacing: \"0.03em\",\r\n        lineHeight: 1,\r\n        opacity: 1,\r\n        outline: \"0px\",\r\n        height: \"48px\",\r\n        padding: \"0px 24px\",\r\n        backgroundColor: \"rgb(31, 199, 212)\",\r\n        color: \"white\",\r\n        maxWidthidth: \"280px\",\r\n\r\n        '&:hover': {\r\n            backgroundColor: \"rgba(31, 199, 212, 0.6)\",\r\n        }\r\n    },\r\n    disabled: {\r\n        backgroundColor: \"rgba(31, 199, 212, 0.4)\",\r\n    },\r\n    \r\n  });\r\n\r\n\r\nexport default function EnterButtonV2() {\r\n\r\n    const [state, setState] = useState({});\r\n\r\n    const classes = useStyles();\r\n\r\n    const [disabled, setDisabled] = useState();\r\n    const [lottery, setLottery] = useState();\r\n    const [provider, setProvider] = useState();\r\n    const [lotterySize, setLotterySize] = useState();\r\n    const [maxValidNumber, setMaxValidNumber] = useState();\r\n    const [lotteryId, setLotteryId] = useState();\r\n    const [lotteryInfo, setLotteryInfo] = useState();\r\n    const [numberOptions, setNumberOptions] = useState([]);\r\n    const [rotation, setRotation] = useState([]);\r\n    const [hueRotate, setHueRotate] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(async () => {\r\n\r\n        const lottery = await loadContract(\"42\", \"Lottery\");\r\n        setLottery(lottery);\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        setProvider(provider);\r\n\r\n        const lotterySize = await lottery.sizeOfLottery();\r\n        setLotterySize(lotterySize.toNumber());\r\n\r\n        const stateobj = {};\r\n        for (let i = 0; i < lotterySize.toNumber(); i++) {\r\n            const nameId = `num${i+1}`;\r\n            stateobj[nameId] = \"0\";\r\n        };\r\n        setState(stateobj);\r\n\r\n        const maxValidNumber = await lottery.maxValidNumber();\r\n        setMaxValidNumber(maxValidNumber.toNumber());\r\n        \r\n        const lotteryId = await lottery.lottoId();\r\n        setLotteryId(lotteryId);\r\n        console.log(`Lottery ID: ${lotteryId}`);\r\n\r\n        const lotteryInfo = await lottery.getLotteryInfo(lotteryId);\r\n        console.log(lotteryInfo);\r\n        setLotteryInfo(lotteryInfo);\r\n\r\n        if (lotteryInfo[2] === 1){\r\n            console.log(\"setting disabled false\");\r\n            setDisabled(false);\r\n        } else {\r\n            console.log(\"setting disabled true\");\r\n            setDisabled(true);\r\n        }\r\n\r\n        const numberOptions = [];\r\n        for (let i = 0; i < maxValidNumber.toNumber() + 1; i++) {\r\n            const obj = { value: `${i}`, label: i, };\r\n            numberOptions.push(obj);\r\n        }\r\n        setNumberOptions(numberOptions);\r\n\r\n        const rotation = [];\r\n        for (let i = 0; i < lotterySize.toNumber(); i++) {\r\n            let rot = Math.floor(Math.random()*15 + 7);\r\n            rot *= Math.round(Math.random()) ? 1 : -1;\r\n            rotation.push(rot);\r\n        };\r\n        setRotation(rotation);\r\n\r\n        const hueRotate = []\r\n        for (let i = 0; i < lotterySize.toNumber(); i++) {\r\n            let numrots = 360/lotterySize.toNumber(); \r\n            let rot = numrots * i;\r\n            hueRotate.push(rot);\r\n        };\r\n        setHueRotate(hueRotate);\r\n\r\n        addLotteryContractListner();\r\n\r\n    }, []);\r\n\r\n    const handleChange = e => {\r\n        const value = e.target.value;\r\n        console.log(value);\r\n        console.log(typeof value);\r\n        console.log(e.target.name);\r\n        console.log(typeof e.target.name);\r\n        setState({\r\n        ...state,\r\n        [e.target.name]: value,\r\n        });\r\n    };\r\n\r\n    const handleBuyTicket = async () => {\r\n        const { address, status } = await getCurrentWalletConnected();\r\n        console.log(address);\r\n        const signer = provider.getSigner();\r\n        const lottery_rw = lottery.connect(signer);\r\n\r\n        const numbers = Object.values(state);\r\n        setLoading(true);\r\n        const tx = await lottery_rw.enter(numbers.map(x=>+x), {value: ethers.utils.parseEther(\"0.001\")});\r\n        setLoading(false);\r\n\r\n        const stateobj = {};\r\n        for (let i = 0; i < lotterySize; i++) {\r\n            const nameId = `num${i+1}`;\r\n            stateobj[nameId] = \"0\";\r\n        };\r\n\r\n        setState(stateobj);\r\n        Array.from(document.querySelectorAll(\"select\")).forEach(\r\n            select => (select.value = \"0\")\r\n          );\r\n        \r\n    };\r\n\r\n\r\n    async function addLotteryContractListner(){\r\n        const lottery = await loadContract(\"42\", \"Lottery\");\r\n        lottery.on(\"LotteryOpen\", async (lotteryId, event) => {\r\n            console.log(event);\r\n            setDisabled(false);\r\n            setLotteryId(lotteryId);\r\n        })\r\n        lottery.on(\"LotteryClose\", async (lotteryId, event) => {\r\n            console.log(event);\r\n            setDisabled(true);\r\n        })\r\n    }\r\n    return(\r\n        <div>\r\n            <div>\r\n                <div style={{\r\n                        textAlign: \"center\",\r\n                        marginBottom: \"10px\",\r\n                        fontSize: \"20px\"}}>\r\n                    <h2> \r\n                        Your Ticket : \r\n                    </h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"number-select-container\">\r\n                {\r\n                    Object.keys(state).map((key, i) => (\r\n                        <div className=\"circle\">\r\n                            <img \r\n                                src={ball}\r\n                                width=\"80px\"\r\n                                height=\"80px\" \r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    zIndex: 2,\r\n                                    filter: `hue-rotate(${hueRotate[i]}deg)`,\r\n                                }}\r\n                                className=\"lottery-img\"\r\n                            />\r\n                            <select \r\n                                onChange={handleChange}\r\n                                name={key}\r\n                                id={key}\r\n                                style={{\r\n                                    transform: `rotate(${rotation[i]}deg)`,\r\n                                }}\r\n                                value={state.key}\r\n                            >\r\n                                {\r\n                                    numberOptions.map((item, key) =>\r\n                                        <option key={key} value={item.value}>{item.label}</option> \r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"buy-button-container\">\r\n                <Button \r\n                    onClick={handleBuyTicket}\r\n                    disabled={disabled}\r\n                    classes={{\r\n                        root: classes.root,\r\n                        disabled: classes.disabled,\r\n                    }}\r\n                >\r\n                    BUY TICKET\r\n                </Button>\r\n                <div style={{marginLeft: 10}}>\r\n                    {\r\n                        loading ? <CircularProgress /> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n} ","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport loadContract from \"../utils/loadContract\";\r\nimport { ethers } from 'ethers'\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { lineHeight } from \"@material-ui/system\";\r\nimport \"./Balance.css\"\r\nimport EnterButtonV2 from \"./EnterButtonV2\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n\r\n    balanceContainer: {\r\n        background: \"linear-gradient(rgb(118, 69, 217) 0%, rgb(69, 42, 122) 100%)\",\r\n    },\r\n\r\n    balanceText:{\r\n        color: \"rgb(253, 171, 50)\",\r\n        lineHeight: 1.5,\r\n        fontWeight: 600,\r\n    }  \r\n  });\r\n\r\nexport default function Balance(){\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [ethbalance, setEthBalance] = useState(0);\r\n    const [usdbalance, setUsdBalance] = useState(0);\r\n    const [lottery, setLottery] = useState();\r\n    const [drawTime, setDrawTime] = useState();\r\n    const [lotteryId, setLotteryId] = useState(0);\r\n    const [lotteryInfo, setLotteryInfo] = useState();\r\n\r\n    const classes = useStyles();\r\n    const MINUTE_MS = 30000;\r\n    const URL = \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=ethereum\"\r\n\r\n    useEffect(async () => {\r\n\r\n        const lottery = await loadContract(\"42\", \"Lottery\");\r\n        setLottery(lottery);\r\n\r\n        const ethbalance = await fetchCurrentBalance();\r\n        setEthBalance(ethers.utils.formatEther(ethbalance));\r\n\r\n        const lotteryId = await lottery.lottoId();\r\n        setLotteryId(lotteryId.toNumber());\r\n\r\n        const lotteryInfo = await lottery.getLotteryInfo(lotteryId);\r\n        setLotteryInfo(lotteryInfo);\r\n\r\n        const unixTime = lotteryInfo[5];\r\n        const unixTimeDateObj = new Date(unixTime.toNumber() * 1000);\r\n        const unixTimeString = unixTimeDateObj.toUTCString(); \r\n        setDrawTime(unixTimeString);\r\n\r\n        addLotteryContractListner();\r\n\r\n        function fetchPrice(){\r\n            fetch(URL)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(typeof ethbalance);\r\n                console.log(data[0].current_price);\r\n                const usdbalance = ethers.utils.formatEther(ethbalance) * (data[0].current_price);\r\n                setUsdBalance(usdbalance);\r\n            })\r\n        }\r\n        fetchPrice();\r\n        const interval = setInterval(fetchPrice, MINUTE_MS);\r\n\r\n        return () => clearInterval(interval);\r\n\r\n      }, []);\r\n    useEffect(() => {\r\n        function fetchPrice(){\r\n            fetch(URL)\r\n            .then(response => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                console.log(typeof ethbalance);\r\n                console.log(data[0].current_price);\r\n                const usdbalance = ethbalance * (data[0].current_price);\r\n                setUsdBalance(usdbalance);\r\n            })\r\n        }\r\n        fetchPrice();\r\n    }, [ethbalance]);\r\n\r\n    async function addLotteryContractListner(){\r\n        const lottery = await loadContract(\"42\", \"Lottery\");\r\n        lottery.on(\"BuyTicket\", async (author, value, event) => {\r\n            console.log(event);\r\n            const ethbalance = await fetchCurrentBalance();\r\n            setEthBalance(ethers.utils.formatEther(ethbalance));\r\n        })\r\n\r\n        lottery.on(\"LotteryOpen\", async (lotteryId, event) => {\r\n\r\n            setLotteryId(lotteryId.toNumber());\r\n\r\n            const lotteryInfo = await lottery.getLotteryInfo(lotteryId);\r\n            setLotteryInfo(lotteryInfo);\r\n\r\n            const unixTime = lotteryInfo[5];\r\n            const unixTimeDateObj = new Date(unixTime.toNumber() * 1000);\r\n            const unixTimeString = unixTimeDateObj.toUTCString(); \r\n            setDrawTime(unixTimeString);\r\n        })\r\n    }\r\n\r\n    async function fetchCurrentBalance() {\r\n\r\n        const lottery = await loadContract(\"42\", \"Lottery\");\r\n          try {\r\n            const address = lottery.address;\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n            const ethbalance = await provider.getBalance(address);\r\n            return ethbalance;\r\n          } catch (err) {\r\n            console.log(\"Error: \", err)\r\n          }\r\n    }    \r\n\r\n    return(\r\n        <div className=\"buy_box_container\">\r\n            <div className=\"buy_box\">\r\n                <div className=\"buy_box_top_bar\">\r\n                    <div className=\"buy_box_top_bar_content\">\r\n                        <h2 className=\"buy_box_top_bar_content_left\">\r\n                            Next Draw :\r\n                        </h2>\r\n                        <div className=\"buy_box_top_bar_content_right\">\r\n                            #{lotteryId} | Draw: {drawTime}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"buy_box_main_box\">\r\n                    <div className=\"buy_box_main_box_content\">\r\n                        <div className=\"Prize-Pot\">\r\n                            <div className=\"Prize-Pot-text-container\">\r\n                                <h2 className=\"Prize-Pot-text\">\r\n                                    Prize Pot :\r\n                                </h2>\r\n                            </div>\r\n\r\n                            <div className=\"Prize-Pot-balance\">\r\n                                <div className=\"Prize-Pot-balance-usd\">\r\n                                    <span>{\"$\"+Math.round(usdbalance)}</span>\r\n                                </div>\r\n                                <div className=\"Prize-Pot-balance-ether\">\r\n                                    <span>{ethbalance + \" ETH\"}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Buy-Button-Box\">\r\n                            <EnterButtonV2></EnterButtonV2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n} from \"../utils/interact\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: \"7px 16px\",\r\n    backgroundColor: \"white\",\r\n    float: \"right\",\r\n    border: \"2px solid #254cdd\",\r\n    borderRadius: \"40px\",\r\n    color: \"#254cdd\",\r\n    marginTop:\" 0px\",\r\n    '&:hover': {\r\n      background: \"rgba(37,76,221,0.5)\",\r\n    },\r\n  }\r\n\r\n});\r\n\r\nconst ConnectButton = () => {\r\n  //state variables\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  // Styling MUI\r\n  const classes = useStyles();\r\n\r\n  //called only once\r\n  useEffect(async () => {\r\n\r\n    const { address, status } = await getCurrentWalletConnected();\r\n    setWallet(address);\r\n    setStatus(status);\r\n    addWalletListener();\r\n\r\n  }, []);\r\n\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0]);\r\n          setStatus(\"👆🏽 Write a message in the text-field above.\");\r\n        } else {\r\n          setWallet(\"\");\r\n          setStatus(\"🦊 Connect to Metamask using the top right button.\");\r\n        }\r\n      });\r\n    } else {\r\n      setStatus(\r\n        <p>\r\n          {\" \"}\r\n          🦊{\" \"}\r\n          <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n            You must install Metamask, a virtual Ethereum wallet, in your\r\n            browser.\r\n          </a>\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  const connectWalletPressed = async () => {\r\n    const walletResponse = await connectWallet();\r\n    setStatus(walletResponse.status);\r\n    setWallet(walletResponse.address);\r\n  };\r\n\r\n\r\n  return (\r\n    <Button classes={{root: classes.root}} onClick={connectWalletPressed}>\r\n      {walletAddress.length > 0 ? (\r\n          \"Connected: \" +\r\n          String(walletAddress).substring(0, 6) +\r\n          \"...\" +\r\n          String(walletAddress).substring(38)\r\n      ) : (\r\n          <span>Connect Wallet</span>\r\n      )}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ConnectButton;\r\n\r\n\r\n","import React from \"react\";\r\nimport ConnectButton from \"./ConnectButton\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    menuButton: {\r\n        marginRight: 2,\r\n      },\r\n      title: {\r\n        flexGrow: 1,\r\n      },\r\n});\r\n\r\nexport default function LotteryAppBar() {\r\n\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        <AppBar position=\"flex\">\r\n            <Toolbar>\r\n\r\n                <Typography variant=\"h6\" align=\"center\" className={classes.title} >\r\n                    Lottery\r\n                </Typography>\r\n\r\n\r\n                <ConnectButton>\r\n                </ConnectButton>\r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport loadContract from \"../utils/loadContract\";\r\nimport { BigNumber, ethers } from 'ethers'\r\nimport { toUtf8CodePoints } from \"ethers/lib/utils\";\r\nimport \"./LotteryHub.css\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport FastForwardIcon from '@material-ui/icons/FastForward';\r\nimport ball from \"../tennis-ball.svg\";\r\nimport {\r\n    getCurrentWalletConnected,\r\n  } from \"../utils/interact\";\r\n\r\nexport default function LotteryHub(){\r\n\r\n    const [lottery, setLottery] = useState();\r\n    const [numTickets, setNumTickets] = useState();\r\n    const [activeButton, setActiveButton] = useState(\"All History\");\r\n    const [searchLotteryId, setSearchLotteryId] = useState();\r\n    const [currentLotteryId, setCurrentLotteryId] = useState();\r\n    const [lotteryInfo, setLotteryInfo] = useState();\r\n    const [drawTime, setDrawTime] = useState();\r\n    const [winningNumbers, setWinningNumbers] = useState([]);\r\n    const [rotation, setRotation] = useState([]);\r\n    const [hueRotate, setHueRotate] = useState([]);\r\n    const [lotterySize, setLotterySize] = useState();\r\n    const [numberOfTickets, setNumberOfTickets] = useState();\r\n    const [tickets, setTickets] = useState();\r\n    const [disabledForward, setDisabledForward] = useState();\r\n    const [disabledBackwards, setDisabledBackwards] = useState();\r\n    const [claimStatus, setClaimStatus] = useState();\r\n\r\n    useEffect( async () => {\r\n\r\n        const lottery = await loadContract(\"42\", \"Lottery\");\r\n        setLottery(lottery);\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n\r\n        const lotterySize = await lottery.sizeOfLottery();\r\n        setLotterySize(lotterySize.toNumber());\r\n\r\n        const currentLotteryId = await lottery.lottoId();\r\n        setCurrentLotteryId(currentLotteryId.toNumber());\r\n\r\n        const lotteryInfo = await lottery.getLotteryInfo(currentLotteryId);\r\n        lotteryInfo[2] === 3 ? \r\n            setSearchLotteryId(currentLotteryId.toNumber())\r\n            : \r\n            setSearchLotteryId(currentLotteryId.toNumber() - 1);\r\n\r\n        setDisabledForward(true);\r\n        \r\n        const rotation = [];\r\n        for (let i = 0; i < lotterySize.toNumber(); i++) {\r\n            let rot = Math.floor(Math.random()*15 + 7);\r\n            rot *= Math.round(Math.random()) ? 1 : -1;\r\n            rotation.push(rot);\r\n        };\r\n        setRotation(rotation);\r\n\r\n        const hueRotate = []\r\n        for (let i = 0; i < lotterySize.toNumber(); i++) {\r\n            let numrots = 360/lotterySize.toNumber(); \r\n            let rot = numrots * i;\r\n            hueRotate.push(rot);\r\n        };\r\n        setHueRotate(hueRotate);\r\n\r\n        addLotteryContractListner();\r\n\r\n    }, []);\r\n\r\n    useEffect (() => {\r\n\r\n        const handleDateChange = async (searchLotteryId) => {\r\n            if (searchLotteryId === undefined){\r\n                return\r\n            }\r\n            else{\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();  \r\n                const lottery = await loadContract(\"42\", \"Lottery\");\r\n                const lottery_rw = lottery.connect(signer);\r\n                const lotteryInfo = await lottery.getLotteryInfo(searchLotteryId);\r\n                const currentLotteryInfo = await lottery.getLotteryInfo(currentLotteryId);\r\n                const claimStatus = await lottery_rw.getClaimStatus(searchLotteryId);\r\n                setClaimStatus(claimStatus);\r\n\r\n                const unixTime = lotteryInfo[5];\r\n                const unixTimeDateObj = new Date(unixTime.toNumber() * 1000);\r\n                const unixTimeString = unixTimeDateObj.toUTCString();\r\n                setDrawTime(unixTimeString);\r\n\r\n                const winningNumbers = lotteryInfo[1];\r\n                setWinningNumbers(winningNumbers.map((e)=>e.toNumber()))\r\n\r\n                const numberOfTickets = await lottery_rw.getNumberOfTickets(searchLotteryId);\r\n                console.log(numberOfTickets.toNumber());\r\n                setNumberOfTickets(numberOfTickets.toNumber());\r\n\r\n                const ticketsObj = {};\r\n                for (let i = 0; i < numberOfTickets; i++){\r\n\r\n                    const numbers = await lottery_rw.getTicketNumber(searchLotteryId, i);\r\n                    ticketsObj[i] = numbers.map(e => e.toNumber());\r\n                };\r\n                setTickets(ticketsObj);\r\n\r\n                if (searchLotteryId === 1){\r\n                    setDisabledBackwards(true);\r\n                }\r\n                \r\n                else if (searchLotteryId === 0){\r\n                    setSearchLotteryId(1);\r\n                }\r\n\r\n                else{\r\n                    setDisabledBackwards(false);\r\n                }\r\n\r\n                currentLotteryInfo[2] === 3 ?\r\n                    searchLotteryId < currentLotteryId ? \r\n                        setDisabledForward(false)\r\n                        :\r\n                        setDisabledForward(true)\r\n                    :\r\n                    searchLotteryId < currentLotteryId - 1 ?\r\n                        setDisabledForward(false)\r\n                        :\r\n                        setDisabledForward(true);\r\n            }\r\n\r\n        };\r\n\r\n        handleDateChange(searchLotteryId);\r\n        \r\n\r\n    }, [searchLotteryId]);\r\n\r\n    const handleClaimPrize = async (lotteryId) => {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const lottery_rw = lottery.connect(signer);\r\n        console.log(lotteryId);\r\n        const tx = lottery_rw.claimPrize(lotteryId);\r\n        console.log(tx);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        if (activeButton === \"All History\"){\r\n            setActiveButton(\"Your History\");\r\n            setSearchLotteryId(currentLotteryId);\r\n        }\r\n        else{\r\n            setActiveButton(\"All History\");\r\n        }\r\n    };\r\n\r\n    const handleBack = async () => {\r\n        setSearchLotteryId(searchLotteryId - 1);\r\n    };\r\n\r\n    const handleForward = async () => {\r\n        setSearchLotteryId(searchLotteryId + 1)\r\n    };\r\n\r\n    const handleFastForward = async () => {\r\n        const lotteryInfo = await lottery.getLotteryInfo(currentLotteryId);\r\n        lotteryInfo[2] === 3 ? \r\n            setSearchLotteryId(currentLotteryId)\r\n            : \r\n            setSearchLotteryId(currentLotteryId - 1);\r\n    };\r\n\r\n    const handleChange = async (e) => {\r\n        if (currentLotteryId - 1  < e.target.value){\r\n            setSearchLotteryId(currentLotteryId-1);\r\n        }\r\n        else{\r\n            setSearchLotteryId(Number(e.target.value))\r\n        }\r\n    };\r\n\r\n    async function addLotteryContractListner(){\r\n        const lottery = await loadContract(\"42\", \"Lottery\");\r\n        lottery.on(\"LotteryClose\", async (lotteryId, winningNumbers, event) => {\r\n            console.log(event);\r\n        })\r\n        lottery.on(\"BuyTicket\", async (buyer, value ,event) => {\r\n\r\n            if (activeButton === \"Your History\" && currentLotteryId === searchLotteryId){\r\n\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n                const signer = provider.getSigner();\r\n                const lottery_rw = lottery.connect(signer);  \r\n                const currentLotteryId = await lottery.lottoId();\r\n                const numberOfTickets = await lottery_rw.getNumberOfTickets(searchLotteryId);\r\n                setNumberOfTickets(numberOfTickets.toNumber());\r\n    \r\n                const ticketsObj = {};\r\n                for (let i = 0; i < numberOfTickets.toNumber(); i++){\r\n    \r\n                    const numbers = await lottery_rw.getTicketNumber(searchLotteryId, i);\r\n                    ticketsObj[i] = numbers.map(e => e.toNumber());\r\n                };\r\n                setTickets(ticketsObj);\r\n            }\r\n\r\n            \r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"lottery-hub-content-container\">\r\n            <div className=\"lottery-hub-header-container\">\r\n                <h2 className=\"lottery-hub-header\">\r\n                    Finished Rounds:\r\n                </h2>\r\n            </div>\r\n            <div className=\"button-container\">\r\n                    <button\r\n                        className={activeButton === \"All History\" ? null : \"button-off\"} \r\n                        onClick={handleClick}\r\n                    >\r\n                            All History\r\n                    </button>\r\n                    <button\r\n                        className={activeButton === \"Your History\" ? null : \"button-off\"}  \r\n                        onClick={handleClick}\r\n                    >\r\n                            Your History\r\n                    </button>\r\n            </div>\r\n            <div className=\"hub-container\">\r\n                <div className=\"hub-navigation-container\">\r\n                    <div className=\"hub-navigation-input-button-container\">\r\n                        <div className=\"hub-navigation-input-container\">\r\n                            <h2 className=\"hub-navigation-input-round\">\r\n                                Round :\r\n                            </h2>\r\n                            <input \r\n                                className=\"hub-navigation-input\"\r\n                                pattern=\"^[0-9]+$\"\r\n                                value={searchLotteryId}\r\n                                name=\"lotteryId\"\r\n                                id=\"lotteryId\"\r\n                                onChange={handleChange}\r\n                            >\r\n                            </input>\r\n                        </div>\r\n                        <div style={{display: \"flex\", alignItems: \"center\",}}>\r\n                            <div className=\"hub-navigation-button-icon\">\r\n                                <button \r\n                                    onClick={handleBack}\r\n                                    className=\"lottery-hub-button\"\r\n                                    disabled={disabledBackwards}\r\n                                >\r\n                                    <ArrowBackIcon></ArrowBackIcon>\r\n                                </button>\r\n\r\n                            </div>\r\n                            <div className=\"hub-navigation-button-icon\">\r\n                                <button \r\n                                    onClick={handleForward}\r\n                                    disabled={disabledForward}\r\n                                    className=\"lottery-hub-button\"\r\n                                >\r\n                                    <ArrowForwardIcon></ArrowForwardIcon>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"hub-navigation-button-icon\">\r\n                                <button \r\n                                    onClick={handleFastForward}\r\n                                    disabled={disabledForward}\r\n                                    className=\"lottery-hub-button\"\r\n                                >\r\n                                    <FastForwardIcon></FastForwardIcon>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{marginTop: 8}}>\r\n                        <div className=\"hub-navigation-draw-time\">\r\n                            Drawn: {drawTime}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    activeButton === \"All History\" ? \r\n                    \r\n                        <div className=\"hub-winning-numbers-container\">\r\n                            <div style={{display: \"flex\", flexDirection: \"column\",}}>\r\n                                <div style={{textAlign: \"center\", marginBottom: 10}}>\r\n                                    <h2 className=\"hub-winning-numbers-text\">\r\n                                        Winning Numbers :\r\n                                    </h2> \r\n                                </div>\r\n                                <div style={{display: \"flex\", justifyContent:\"space-evenly\"}}>\r\n                                    {\r\n                                        winningNumbers.map((e, key) => \r\n                                            <div className=\"circle\">\r\n                                                <img \r\n                                                    src={ball}\r\n                                                    width=\"80px\"\r\n                                                    height=\"80px\" \r\n                                                    style={{\r\n                                                        position: \"absolute\",\r\n                                                        zIndex: 2,\r\n                                                        filter: `hue-rotate(${hueRotate[key]}deg)`,\r\n                                                    }}\r\n                                                    className=\"lottery-img\"\r\n                                                />\r\n                                                <h2 \r\n                                                    className=\"hub-winnning-numbers-inline-text\"\r\n                                                    style={{\r\n                                                        transform: `rotate(${rotation[key]}deg)`,\r\n                                                    }}>\r\n                                                        {e}\r\n                                                </h2>\r\n                                            </div>)\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"hub-winning-numbers-container\">\r\n                        <div style={{alignItems: \"center\", marginBottom: 10}}>\r\n                            <button \r\n                                onClick={() => handleClaimPrize(searchLotteryId)}\r\n                                disabled={claimStatus}\r\n                                className=\"lottery-hub-button\"\r\n                            >\r\n                                Claim Prize\r\n                            </button>\r\n                        </div>\r\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n                            {\r\n                                Object.values(tickets).map((ticket, key) =>\r\n                                    <div>\r\n                                        <div style={{textAlign: \"center\", marginBottom: 10}}>\r\n                                            <h2>\r\n                                                # {key+1}\r\n                                            </h2>\r\n                                        </div>\r\n                                        <div style={{display: \"flex\", justifyContent:\"space-evenly\"}}>\r\n                                            {\r\n                                                ticket.map((e, i) => \r\n                                                    <div className=\"circle\">\r\n                                                        <img \r\n                                                            src={ball}\r\n                                                            width=\"80px\"\r\n                                                            height=\"80px\" \r\n                                                            style={{\r\n                                                                position: \"absolute\",\r\n                                                                zIndex: 2,\r\n                                                                filter: `hue-rotate(${hueRotate[i]}deg)`,\r\n                                                            }}\r\n                                                            className=\"lottery-img\"\r\n                                                        />\r\n                                                        <h2 \r\n                                                            className=\"hub-winnning-numbers-inline-text\"\r\n                                                            style={{\r\n                                                                transform: `rotate(${rotation[i]}deg)`,\r\n                                                            }}\r\n                                                        >\r\n                                                            {e}\r\n                                                        </h2>  \r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        </div>\r\n                                    </div>                                \r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}","import React from \"react\"\nimport './App.css'\nimport Balance from \"./components/Balance\"\nimport LotteryAppBar from \"./components/LotteryAppBar\"\nimport LotteryHub from \"./components/LotteryHub\"\nexport default function App() {\n\n    return(\n        <div>\n            <nav>\n                <LotteryAppBar></LotteryAppBar>\n            </nav>\n            <div>\n                <div>\n                    <div className=\"main_page\">\n                        <div className=\"call_to_action_text\">\n                            <h2> Get Your Tickets Now!</h2>\n                        </div>\n                        <div>\n                            <Balance></Balance>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <div className=\"lottery-hub-main-page\">\n                    <LotteryHub></LotteryHub>\n                </div>\n            </div>\n        </div>\n    )\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App></App>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tennis-ball.32555e89.svg\";"],"sourceRoot":""}